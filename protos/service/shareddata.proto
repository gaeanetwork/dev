syntax = "proto3";

/**
    cd $GOPATH/src
    protoc -I=. --go_out=plugins=grpc:. github.com/gaeanetwork/gaea-core/protos/service/shareddata.proto
*/
option go_package = "github.com/gaeanetwork/gaea-core/protos/service";

package service;

import "github.com/gaeanetwork/gaea-core/protos/tee/shareddata.proto";

service SharedData {
    rpc Upload (UploadRequest) returns (UploadResponse);
}

// @Param	ciphertext		formData 	string		true	"Encrypted ciphertext used to share data, usually encrypted with a private key. Of course, you can also not encrypt, upload data plaintext, such as data addresses."
// @Param	summary			formData 	string		true	"A summary of the data shared by the user. It is generally calculated using SM3/SHA-256/MD5. SM3 encryption is currently recommended."
// @Param	description		formData 	string		true	"A data description of the user's shared data. Often used to explain the basics of data or what it can be used for."
// @Param	owner			formData 	string		true	"Data owner for user shared data. Generally use owner public key."
// @Param	hash			formData 	string		false	"All parameters except the signature are sequentially connected to obtain a hash."
// @Param	signatures		formData 	[]string	false	"Signature of the data summary by the user's private key."

message UploadRequest {
    string data = 1;
    string hash = 2;
    string description = 3;
    string owner = 4;
    SignatureGroup signatures = 5;
}

message UploadResponse {
    tee.SharedData data = 1;
}

message SignatureGroup{
    repeated string signature = 1;
}